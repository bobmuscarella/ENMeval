# Generated by roxygen2: do not edit by hand

export("%>%")
export(ENMdetails)
export(ENMevaluate)
export(ENMnullSims)
export(calc.10p.trainThresh)
export(calc.aicc)
export(calc.niche.overlap)
export(corrected.var)
export(enm.bioclim)
export(enm.brt)
export(enm.maxent.jar)
export(enm.maxnet)
export(get.block)
export(get.checkerboard1)
export(get.checkerboard2)
export(get.jackknife)
export(get.randomkfold)
export(lookup.enm)
export(maxentJARversion)
export(mess)
export(plot.eval)
export(plot.grps)
export(plot.grps.mess)
export(plot.nullENMs)
exportClasses(ENMevaluation)
exportClasses(ENMnull)
exportMethods("enm.aic<-")
exportMethods("enm.args<-")
exportMethods("enm.eval.test<-")
exportMethods("enm.eval.train<-")
exportMethods("enm.fun<-")
exportMethods("enm.msgs<-")
exportMethods("enm.name<-")
exportMethods("enm.nparam<-")
exportMethods("enm.pkgs<-")
exportMethods("enm.pred<-")
exportMethods(enm.aic)
exportMethods(enm.args)
exportMethods(enm.eval.test)
exportMethods(enm.eval.train)
exportMethods(enm.fun)
exportMethods(enm.msgs)
exportMethods(enm.name)
exportMethods(enm.nparam)
exportMethods(enm.pkgs)
exportMethods(enm.pred)
exportMethods(eval.algorithm)
exportMethods(eval.bg)
exportMethods(eval.bg.grp)
exportMethods(eval.models)
exportMethods(eval.occ.grp)
exportMethods(eval.occs)
exportMethods(eval.other.settings)
exportMethods(eval.overlap)
exportMethods(eval.partition.method)
exportMethods(eval.partition.settings)
exportMethods(eval.predictions)
exportMethods(eval.results)
exportMethods(eval.results.grp)
exportMethods(eval.rmm)
exportMethods(eval.taxon.name)
exportMethods(eval.tune.settings)
exportMethods(no.iter)
exportMethods(null.algorithm)
exportMethods(null.mod.settings)
exportMethods(null.other.settings)
exportMethods(null.partition.method)
exportMethods(null.partition.settings)
exportMethods(null.results)
exportMethods(null.results.grp)
exportMethods(real.bg)
exportMethods(real.bg.grp)
exportMethods(real.occ.grp)
exportMethods(real.occs)
exportMethods(real.vs.null.results)
exportMethods(show)
importFrom(foreach,"%dopar%")
importFrom(magrittr,"%>%")
importFrom(methods,setClass)
importFrom(methods,setGeneric)
importFrom(methods,setMethod)
importFrom(methods,setRefClass)
